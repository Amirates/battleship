Rules of Battleship in Java Game:
There is a 7x7 board, ie 49 blocks. There are 5 hidden ships (one in each block).
The objective of the game is figuring out where these ships are placed and hit them.
Every shot fired is said if you hit a ship. If you have wrong is told how many ships are in that row and that column.
The game only ends when you find and sink the 5 ships.

Legend pro user:
~: Water in the block. Still not been shot.
*: Shot fired, there's nothing there.
X: shot fired, there was a ship.

How to play Battleship in Java Game:
Each round, enter two numbers: the number of the row and column number where you want to give the shot.
Then just wait to see if hit some ship, or the hint.

To Java programmers:
The board is 7x7 integer. It is initialized with values ​​'-1'.
Every shot, it is upgraded, depending on whether you hit or missed. These figures serve to show '~', '*' or 'X' for the user.
Also serve to display tooltips.

Labels of the board:
 -1: No shot was given in that block (~)
  0: the shot was given and there was no ship there (*)
  1: The user shot and had a ship there (X)
  
  Methods:
void initBoard (int[][] board) - initially sets the value -1 in all blocks of the board

void showBoard (int[][] board) - gets the int matrix and shows the board game

void initShip (int[][] ships) - this method randomly select 5 pairs of integers numbers, which are the location of the 5 ships

void shoot (int[] shot) - gets a shot (row and column) of the user, and stores in variable shot[]

boolean shotHit(int[] shot, int[][] ships) - checks if given shot hit a ship

void hint(int [] shot, int[][] ships, int attempt) - gives a hint of how many ships are in that row and that column where the shot was given

void changeBoard (int[] shot, int[][] ships, int[][] board) - after the shot is given, the board is changed, showing that the shot was given (if hit or missed)
